var module=angular.module("wmLoginAngular",["templates-wmLoginAngular"]);module.constant("CONFIG",window.angularConfig),module.constant("wmRegex",{username:/^[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\-]{1,20}$/,email:/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/}),module.factory("focus",["$timeout",function($timeout){return function(selector){$timeout(function(){var el=angular.element(selector);el&&el[0]&&el[0].focus()},0)}}]),module.factory("passwordValidator",[function(){return function($scope,password,blur){if(!password)return $scope.eightCharsState=$scope.oneEachCaseState=$scope.oneNumberState="default",void($scope.isValidPassword=!1);var lengthValid=password.length>=8,validCase=password.match(/^.*(?=.*[a-z])(?=.*[A-Z]).*$/),hasNumber=password.match(/\d/);$scope.eightCharsState=lengthValid?blur?"valid":"":"invalid",$scope.oneEachCaseState=validCase?blur?"valid":"":"invalid",$scope.oneNumberState=hasNumber?blur?"valid":"":"invalid",$scope.isValidPassword=lengthValid&&validCase&&hasNumber}}]),module.factory("wmLoginService",["$rootScope","$modal","$window","$location","CONFIG",function($rootScope,$modal,$window,$location,CONFIG){function apply(){$rootScope.$$phase||$rootScope.$apply()}var auth=new $window.WebmakerAuthClient({host:"",csrfToken:CONFIG.csrf,handleNewUserUI:!1});$rootScope._user={},$rootScope.logout=auth.logout,$rootScope.lang=CONFIG.lang,auth.on("logout",function(){$rootScope._user={},apply()}),auth.on("tokenlogin",function(user){$location.search("uid",null),$location.search("token",null),$location.search("validFor",null),$rootScope._user=user,apply()}),auth.on("passwordlogin",function(user){$rootScope._user=user,apply()}),$rootScope.login=auth.login,auth.on("login",function(user){$rootScope._user=user,apply()}),auth.on("error",function(message,xhr){console.error("error",message,xhr)});var searchObj=$location.search();return searchObj.uid&&searchObj.token&&auth.authenticateToken(searchObj.uid,searchObj.token,searchObj.validFor),auth.verify(),auth}]),module.directive("wmCreateUser",[function(){return{restrict:"A",link:function($scope,$element){$element.on("click",function(){$scope.wmCreateUser()})},controller:["$rootScope","$scope","$http","$modal","$timeout","focus","wmLoginService","wmRegex",function($rootScope,$scope,$http,$modal,$timeout,focus,wmLoginService,wmRegex){function apply(){$rootScope.$$phase||$rootScope.$apply()}function createUserController($scope,$modalInstance,email,username){function getModalIdx(){return Math.floor(4*Math.random())}$scope.form={},$scope.user={},$scope.user.email=email,$scope.user.username=username,$scope.enterEmail=!0,$scope.selectUsername=!1,$scope.welcome=!1,$scope.submitEmail=function(){$scope.submit=!0,$scope.form.agree&&$scope.user.email&&($scope.enterEmail=!1,$scope.selectUsername=!0,focus('input[focus-on="create-user-username"]'))},$scope.checkEmail=function(){if($scope.user.email){var isValid=wmRegex.email.test($scope.user.email);$scope.form.user.email.$setValidity("invalidEmail",isValid),$scope.form.user.email.$setValidity("noAccount",!0),isValid&&wmLoginService.uidExists($scope.user.email,function(err,resp){$scope.form.user.email.$setValidity("serverError",!!err),$scope.form.user.email.$setValidity("accountExists",!resp.exists),apply()})}},$scope.submitUsername=function(){$scope.form.user.username.$valid&&($scope.sendingRequest=!0,wmLoginService.createNewUser({user:$scope.user},function(){$scope.selectUsername=!1,$scope.welcomeModalIdx=getModalIdx(),$scope.welcome=!0,$scope.sendingRequest=!1,apply()}))},$scope.continue=function(){$modalInstance.dismiss("done")},$scope.cancel=function(){wmLoginService.analytics.webmakerNewUserCancelled(),$modalInstance.dismiss("cancel")},$scope.switchToLogin=function(){$modalInstance.close(),$rootScope.wmTokenLogin($scope.user.email)},$scope.checkUsername=function(){if($scope.user.username){if(!wmRegex.username.test($scope.user.username))return void $scope.form.user.username.$setValidity("invalidUsername",!1);$scope.form.user.username.$setValidity("invalidUsername",!0),$http.post(wmLoginService.urls.checkUsername,{username:$scope.user.username}).success(function(username){$scope.form.user.username.$setValidity("taken",!username.exists),apply()}).error(function(){$scope.form.user.username.$setValidity("taken",!0),apply()})}},$scope.tryApp=function(app){window.location="https://"+app+".webmaker.org"}}$rootScope.wmCreateUser=function(email,username){$modal.open({templateUrl:"create-user-modal.html",controller:createUserController,resolve:{email:function(){return email},username:function(){return username}}}).opened.then(function(){focus('input[focus-on="create-user-email"]')})}}]}}]),module.directive("wmLogin",[function(){return{restrict:"A",link:function($scope,$element){$element.on("click",function(){$scope.wmTokenLogin()})},controller:["$rootScope","$scope","$http","$modal","$timeout","focus","wmLoginService","wmRegex",function($rootScope,$scope,$http,$modal,$timeout,focus,wmLoginService,wmRegex){function apply(){$rootScope.$$phase||$rootScope.$apply()}function tokenLoginController($scope,$modalInstance,uid,passwordReset){function disableListeners(){wmLoginService.off("login",$scope.continue),wmLoginService.off("tokenlogin",$scope.continue),wmLoginService.off("passwordlogin",$scope.continue)}var MODALSTATE={enterUid:0,checkEmail:1,enterKey:2,enterPassword:3,resetRequestSent:4};$scope.MODALSTATE=MODALSTATE,$scope.form={},$scope.user={},$scope.currentState=MODALSTATE.enterUid,$scope.sendingRequest=!1,$scope.passwordReset=passwordReset,uid&&($scope.user.uid=uid),$scope.switchToSignup=function(){var uid=$scope.user.uid,isEmail=wmRegex.email.test(uid),email=isEmail?uid:"",username=isEmail?"":uid;disableListeners(),$modalInstance.close(),$rootScope.wmCreateUser(email,username)},$scope.submitUid=function(){function requestToken(isVerified){$scope.sendingRequest=!0,wmLoginService.request($scope.user.uid,function(err){err?"User not found"===err?$scope.form.user.uid.$setValidity("noAccount",!1):($scope.form.user.uid.$setValidity("tokenSendFailed",!1),$timeout(function(){$scope.form.user.uid.$setValidity("tokenSendFailed",!0)},1e4)):isVerified?($scope.currentState=MODALSTATE.enterKey,focus('input[focus-on="enter-key"]')):$scope.currentState=MODALSTATE.checkEmail,$scope.sendingRequest=!1,apply()})}var input=$scope.user.uid,isValid=wmRegex.username.test(input)||wmRegex.email.test(input);$scope.form.user.uid.$setValidity("invalid",isValid),isValid&&($scope.sendingRequest=!0,wmLoginService.uidExists(input,function(err,resp){if($scope.sendingRequest=!1,$scope.form.user.uid.$setValidity("tokenSendFailed",!err),$scope.form.user.uid.$setValidity("noAccount",resp.exists),err)$timeout(function(){$scope.form.user.uid.$setValidity("tokenSendFailed",!0)},1e4);else if(resp.exists)return $scope.passwordReset=!1,resp.usePasswordLogin?($scope.currentState=MODALSTATE.enterPassword,focus('input[focus-on="enter-password"]'),apply()):requestToken(resp.verified);apply()}))},$scope.submitKey=function(){$scope.sendingRequest=!0,wmLoginService.authenticateToken($scope.user.uid,$scope.user.key,"session",function(err){$scope.sendingRequest=!1,$scope.form.user.key.$setValidity("invalidKey",!err),err||($scope.user.key=""),apply()})},$scope.submitPassword=function(){$scope.sendingRequest=!0,wmLoginService.verifyPassword($scope.user.uid,$scope.user.password,function(err,result){$scope.sendingRequest=!1,$scope.form.user.password.$setValidity("passLoginFailed",err?!1:result),apply()})},$scope.requestReset=function(){wmLoginService.requestResetCode($scope.user.uid,function(err){$scope.form.user.password.$setValidity("resetRequestFailed",!err),err||($scope.currentState=MODALSTATE.resetRequestSent),apply()})},$scope.cancel=function(){disableListeners(),$modalInstance.dismiss("cancel")},$scope.continue=function(){disableListeners(),$modalInstance.dismiss("done")},$scope.usePersona=function(){disableListeners(),$modalInstance.dismiss("done"),$rootScope.login()},$scope.enterKey=function(){$scope.currentState=MODALSTATE.enterKey},wmLoginService.on("login",$scope.continue),wmLoginService.on("tokenlogin",$scope.continue),wmLoginService.on("passwordlogin",$scope.continue)}$rootScope.wmTokenLogin=function(uid,passwordReset){$modal.open({templateUrl:"login-modal.html",controller:tokenLoginController,resolve:{uid:function(){return uid},passwordReset:function(){return!!passwordReset}}}).opened.then(function(){focus('input[focus-on="login-uid"]')})}}]}}]),module.directive("wmPasswordReset",[function(){var triggered=!1;return{restrict:"A",controller:["$rootScope","$scope","$location","$modal","wmLoginService","passwordValidator",function($rootScope,$scope,$location,$modal,wmLoginService,passwordValidator){function apply(){$rootScope.$$phase||$rootScope.$apply()}function passwordResetController($scope,$modalInstance,resetCode,uid){return $scope.form={},$scope.password={},$scope.sendingRequest=!1,$scope.eightChars=angular.element("li.eight-chars"),$scope.oneEachCase=angular.element("li.one-each-case"),$scope.oneNumber=angular.element("li.one-number"),uid&&resetCode?($scope.checkPassword=function(blur){passwordValidator($scope,$scope.password.value,blur),apply()},$scope.validateConfirmPassword=function(blur){return $scope.password.confirmValue?($scope.passwordsMatch=$scope.password.value===$scope.password.confirmValue,void(blur&&$scope.form.password.value.$setValidity("noMatch",$scope.passwordsMatch))):$scope.form.password.value.$setValidity("noMatch",!0)},$scope.canSubmit=function(){return $scope.password.value&&$scope.password.confirmValue&&$scope.passwordsMatch},$scope.submitReset=function(){wmLoginService.resetPassword(uid,resetCode,$scope.password.value,function(err){if(err){try{err=JSON.parse(err),err.passed===!1?$scope.form.password.value.$setValidity("weakPassword",!1):$scope.form.password.value.$setValidity("serverError",!1)}catch(ex){$scope.form.password.value.$setValidity("serverError",!1)}return apply()}$scope.form.password.value.$setValidity("serverError",!0),$scope.form.password.value.$setValidity("weakPassword",!0),$location.search("uid",null),$location.search("resetCode",null),$modalInstance.close(),$rootScope.wmTokenLogin(uid,!0)})},void($scope.cancel=function(){$modalInstance.dismiss("cancel")})):$modalInstance.close()}var searchObj=$location.search();searchObj.resetCode&&searchObj.uid&&!triggered&&(triggered=!0,$modal.open({templateUrl:"reset-modal.html",controller:passwordResetController,resolve:{resetCode:function(){return searchObj.resetCode},uid:function(){return searchObj.uid}}}))}]}}]),module.factory("wmPersonaListener",["$modal","$http","wmLoginService","wmRegex",function($modal,$http,wmLoginService,wmRegex){function createUserCtrl($scope,$modalInstance,wmLoginService,assertion){$scope.form={},$scope.user={},$scope.checkUsername=function(){if($scope.form.user.username){if(!wmRegex.username.test($scope.form.user.username.$viewValue))return void $scope.form.user.username.$setValidity("invalid",!1);$scope.form.user.username.$setValidity("invalid",!0),$http.post(wmLoginService.urls.checkUsername,{username:$scope.form.user.username.$viewValue}).success(function(username){$scope.form.user.username.$setValidity("taken",!username.exists)}).error(function(){$scope.form.user.username.$setValidity("taken",!0)})}},$scope.createUser=function(){$scope.submit=!0,$scope.form.user.$valid&&$scope.form.agree&&(wmLoginService.createUser({assertion:assertion,user:$scope.user}),$modalInstance.close())},$scope.cancel=function(){wmLoginService.analytics.webmakerNewUserCancelled(),$modalInstance.dismiss("cancel")}}wmLoginService.on("newuser",function(assertion){$modal.open({templateUrl:"legacy-create-user-modal.html",controller:createUserCtrl,resolve:{assertion:function(){return assertion}}})})}]),module.directive("wmPersonaLogin",["wmPersonaListener",function(){return{restrict:"A",link:function($scope,$element){$element.on("click",function(){$scope.login()})}}}]),module.directive("wmLogout",["wmLoginService",function(){return{restrict:"A",link:function($scope,$element){$element.on("click",function(){$scope.logout()})}}}]);
//# sourceMappingURL=wmLogin-angular.min.js.map